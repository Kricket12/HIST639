xquery version "3.1";

declare variable $sentence := "When in the course of human events"

declare function local:is-duplicate($phrase as xs:string?) as xs:string
{
let tokens := fn:lower-case($phrase) => fn: tokenize(" ")
let $first-word := $tokens[1]
let $next-word := $tokens[2]
return
    if (fn:empty(($next-word))) then "There is no duplicate." (:Here I used a base case that would only betrue at the end of the recursion.:)
    else if ($first-word eq $next-word) then
        fn:concat("Found a duplicate '", $first word, "' after word ", $first-wrod ! position(), " of the phrase.") (:NOW: HOW TO GET THE RIGHT NUBMER?:) 
    else
        let $new-phrase := fn:string-join($tokens[position() = 2 to last()], " ") (:I used last() her because it wouldn't work unlesss I passed the entire rest of tokens in!:)
        return local:is-duplicate($new-phrase)
        
local:is-duplicate($sentence)


