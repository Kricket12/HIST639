<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns="http://www.tei-c.org/ns/1.0">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>ODD for Queen Anelida and false Arcyte</title>
      </titleStmt>
      <publicationStmt>
        <p>ODD for HIST 690 at Texas A&amp;M University</p>
      </publicationStmt>
      <sourceDesc>
          <bibl>Standoff Markup Born digital</bibl>
          <bibl>
            <title>Queen Anelida and false Arcyte</title>
            by
            <author>
              <name>Geoffrey Chaucer</name>
            </author>
            <publisher>Printed by William Caxton</publisher>
            <pubPlace>London</pubPlace>
            <date when="1477">1477</date>
            <edition>2nd ed.</edition>
            <idno type="STC">5090</idno>
          </bibl>
        </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <body>
      <schemaSpec ident="AnelidaandfalseArciteODD" start="TEI">
        <moduleRef key="header"/>
        <moduleRef key="core"/>
        <moduleRef key="tei"/>
        <moduleRef key="textstructure" exclude= "div1 div2 div3 div4 div5 div6 div7"/>
        <moduleRef key="namesdates" include = "persName placeName objectName name"/>
        <moduleRef key="verse"/>
        <moduleRef key="linking"/>
        
        <elementSpec ident="persName" module="namesdates" mode="change">
          <constraintSpec ident="ref-on-persName" scheme="schematron">
            <constraint>
              <sch:rule context="tei:text//tei:persName/@ref">
                <sch:let name="standoff"
                  value="doc('https://raw.githubusercontent.com/Kricket12/HIST639/main/standoffMarkup.xml')"/>
                <sch:let name="personIDs"
                  value="$standoff//tei:listPerson/tei:person/@xml:id"/>
                <sch:let name="personRefValues" value="for $i in $personIDs return concat('#', $i)"/>
                <sch:let name="error" value="."/>
                <sch:assert
                  test=". = $personRefValues">
                  <sch:value-of select="$error"/> is not an identified person in the standoff markup for "Arcite and False Arcyte." Acceptable values: <sch:value-of select="string-join($personRefValues, ', ')"/>.
                </sch:assert>
              </sch:rule>
            </constraint>
          </constraintSpec>
        </elementSpec>
        
        
        <elementSpec ident="placeName" module="namesdates" mode="change">
          <constraintSpec ident="ref-on-placeName" scheme="schematron">
            <constraint>
              <sch:rule context="tei:text//tei:placeName/@ref">
                <sch:let name="standoff"
                  value="doc('https://raw.githubusercontent.com/Kricket12/HIST639/main/standoffMarkup.xml')"/>
                <sch:let name="personIDs"
                  value="$standoff//tei:listPlace/tei:place/@xml:id"/>
                <sch:let name="placeRefValues" value="for $i in $placeIDs return concat('#', $i)"/>
                <sch:let name="error" value="."/>
                <sch:assert
                  test=". = $placeRefValues">
                  <sch:value-of select="$error"/> is not an identified place in the standoff markup for "Arcite and False Arcyte." Acceptable values: <sch:value-of select="string-join($placeRefValues, ', ')"/>.
                </sch:assert>
              </sch:rule>
            </constraint>
          </constraintSpec>
        </elementSpec>
      </schemaSpec>
      
    </body>
  </text>
</TEI>   
